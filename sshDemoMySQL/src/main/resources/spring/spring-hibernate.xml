<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd">

  <!-- database -->
  <context:property-placeholder location="classpath:jdbc.properties" />

  <!-- 配置数据源 -->
  <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="${jdbc.driverClass}" />
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="user" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    
    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 --> 
    <property name="acquireIncrement" value="3" />
    <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
    <property name="initialPoolSize" value="10" />
    <property name="minPoolSize" value="5" />
    <property name="maxPoolSize" value="100" />
    <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --> 
    <property name="maxIdleTime" value="60" />
    <!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
    <property name="idleConnectionTestPeriod" value="60" />
    <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 
         属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
         如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0--> 
    <property name="maxStatements" value="100" />
    <!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能 通过
         多线程实现多个操作同时被执行。Default: 3--> 
    <property name="numHelperThreads" value="100" />
  </bean>

  <!-- myBatis文件 -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="hibernateProperties">
      <props>
        <!--  
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2012Dialect</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.Oracle12cDialect</prop>
        -->
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
      </props>
    </property>
    <!-- 使用通配符配置整个同一路径下的.hbm.xml -->
    <property name="mappingLocations" value="classpath:entity/*.hbm.xml" />
  </bean>
  
  <!-- 配置事务管理器 -->
  <bean id="transactionManager" 
    class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"></property>
  </bean>

  <!-- 拦截器方式配置事物 -->
  <tx:advice id="transactionAdvice"
    transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="edit*" propagation="REQUIRED" />
      <tx:method name="delete*" propagation="REQUIRED" />
      <tx:method name="del*" propagation="REQUIRED" />
      <tx:method name="remove*" propagation="REQUIRED" />

      <tx:method name="get*" propagation="SUPPORTS" />
      <tx:method name="list*" propagation="SUPPORTS" />
      <tx:method name="page*" propagation="SUPPORTS" />
      <tx:method name="count*" propagation="SUPPORTS" />
      <tx:method name="*" propagation="SUPPORTS" />
    </tx:attributes>
  </tx:advice>
  <aop:config>
    <aop:pointcut id="transactionPointcut"
      expression="execution(* org.cloud.ssm.service.impl.*.*(..))" />
    <aop:advisor pointcut-ref="transactionPointcut"
      advice-ref="transactionAdvice" />
  </aop:config>
</beans>